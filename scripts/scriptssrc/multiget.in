#! /usr/bin/env bash
##########################################################################
##									##
##	multiget is automatically generated,				##
##		please do not modify!					##
##									##
##########################################################################

##########################################################################
##									##
## Script ID: multiget							##
## Author: Mark Grant							##
##									##
## Purpose:								##
## Retrieves one or more files whose URL's are specified in a text file.##
##                                                              	##
## Syntax:      multiget [OPTIONS]					##
##			[OPTIONS] are:-					##
##	-g group Save target file with 'group' owner.			##
##		Does not persist between invocations.			##
##		i.e. Ignored by option -p.				##
##	-h Displays usage information.					##
##	-o owner Save target file with 'owner' owner.			##
##		Does not persist between invocations.			##
##		i.e. Ignored by option -p.				##
##	-p Saves command line options for future use.			##
##	-q Quiet mode, limited output.					##
##	-s Silent mode, no output.					##
##	-S sourcefile Name of the file containing the URL's of files to	##
##		be fetched.						##
##	-T targetdir Directory in which to store retieved files.	##
##	-v Verbose mode.						##
##	-V Displays version information.				##
##	-w Use Windows CR/LF instead of Unix LF line endings.		##
##									##
## Exit Codes:	0 & 64 - 113 as per C/C++ standard			##
##		0 - success						##
##		64 - Invalid arguments					##
##		66 - File access error					##
##		67 - trap received					##
##		77 - Permissions error					##
##									##
##########################################################################

##########################################################################
##									##
## Changelog								##
##									##
## Date		Author	Version	Description				##
##									##
## 29/04/2013	MG	1.0.1	Created.Does not implement mail		##
##				notification.				##
## 30/04/2013	MG	1.0.2	Corrected Error status section on man	##
##				page. Introduced sed processing on	##
##				source file to ensure it has Unix type	##
##				line endings. Removed part implemented	##
##				'MailTo' option.			##
## 02/05/2013	MG	1.0.3	Introduce -q option to enable use of	##
##				fetch or wget quiet mode.		##
## 03/05/2013	MG	1.0.4	Included source and target information	##
##				in script output to be more useful.	##
## 05/05/2013	MG	1.0.5	Fixed ugly exit if 'sourcefile' = "" or	##
##				'targetdir' = "". 'targetdir' is now	##
##				defaulted to 'PWD'.			##
## 22/08/2013	MG	1.0.6	Debian best practice documentation	##
##				requires that programs placed in the	##
##				PATH should not have extensions as the	##
##				programs may be rewritten in a		##
##				different language. This would then	##
##				require a name change, or, if left	##
##				as-is would cause confusion. So name	##
##				changed to remove .sh extension.	##
## 13/12/2013	MG	1.0.7	Changed stdout & stderr message output	##
##				to use a function directing to one or	##
##				other based on a status.		##
## 14/12/2013	MG	1.0.8	Changed so that output function is the	##
##				only place to insert the program name	##
##				and it uses $0.				##
## 15/12/2013	MG	1.0.9	Use command name instead of $0.		##
## 01/01/2014	MG	1.0.10	Tidied up use of output function.	##
## 05/01/2014	MG	1.0.11	Introduced new standardised error	##
##				handler routine to test previous	##
##				command success.			##
##				Changed command line options to use -V	##
##				as the version option, S as Source URL	##
##				and -T as target directory. Introduced	##
##				-q, -s & -v as quiet, silent and	##
##				verbose	options. Fixed error handling	##
##				on existing file deletion.		##
##									##
##########################################################################


####################
## Init variables ##
####################
script_exit_code=0
version="1.0.11"		# set version variable
etclocation=@sysconfdir@	# Path to etc directory
outputprefix="multiget: "

# Get system name for implementing OS differeneces.
osname=$(uname -s)

conffile=".multiget"
ownergroup=FALSE
owner=FALSE
persist=FALSE
sourcefile=""
targetdir=""
# Fetch defaults to moderate output, wget defaults to verbose so make non-verbose default here.
verbosity=""
if [ $osname = "Linux" ]
then
	verbosity="-nv"
fi
windows=FALSE

###############
## Functions ##
###############

# Output $1 to stdout or stderr depending on $2
output()
{
	if [ $2 = 0 ]
	then
		echo "$outputprefix$1"
	else
		echo "$outputprefix$1" 1>&2
	fi
}

# Standard function to test command error ($1 is $?) and exit if non-zero
std_cmd_err_handler()
{
	if [ $1 != 0 ]
	then
		script_exit_code=$1
		script_exit
	fi
}

# Standard function to tidy up and return exit code
script_exit()
{
	exit $script_exit_code
}

# Standard trap exit function
trap_exit()
{
script_exit_code=67
output "Script terminating due to trap received. Code: "$script_exit_code 1
script_exit
}

# Setup trap
trap trap_exit SIGHUP SIGINT SIGTERM

# Function to write config file.
write_file()
{
	echo "sourcefile=$sourcefile">>~/.multiget
	echo "targetdir=$targetdir">>~/.multiget
}

##########
## Main ##
##########
# If config file exists, read it, else, create it.
if [ ! -f ~/$conffile ]
then
	write_file
else
	IFS="="
	exec 3<~/$conffile
	while read -u3 -ra input
	do
		case ${input[0]} in
		sourcefile)
			sourcefile=${input[1]}
			;;
		targetdir)
			targetdir=${input[1]}
			;;
		esac
	done
	exec 3<&-
fi

# Process command line arguments with getopts.
while getopts :g:ho:pqsS:T:vVw arg
do
	case $arg in
	g)	ownergroup=TRUE
		newownergroup=$OPTARG
		;;
	h)	echo "Usage is $0 [OPTIONS]"
		echo "	[OPTIONS] are:-"
		echo "	'-g group' Save target file with 'group' owner."
		echo "	'-h' Displays usage information."
		echo "	'-o owner' Save target file with 'owner' owner."
		echo "	'-p' Saves command line options for future use."
		echo "	'-q' Quiet mode, limited output."
		echo "	'-s' Silent mode, no output."
		echo "	'-S sourcefile' Name of file containing source URL's."
		echo "		Can be persisted by -p option."
		echo "	'-T targetdir' Name of directory for storing retrieved files."
		echo "		Can be persisted by -p option."
		echo "	'-v' Verbose mode."
		echo "	'-V' Displays version information."
		echo "	'-w' Use Windows CR/LF line endings instead of Unix LF line endings."
		script_exit_code=0
		script_exit
		;;
	o)	owner=TRUE
		newowner=$OPTARG
		;;
	p)	persist=TRUE
		;;
	q)	verbosity="-q"
		;;
	s)	verbosity=""
		exec 1>/dev/null 2>/dev/null
		;;
	S)	sourcefile=$OPTARG
		;;
	T)	targetdir=$OPTARG
		;;
	v)	verbosity="-v"
		;;
	V)	echo "$0 version "$version
		script_exit_code=0
		script_exit
		;;
	w)	windows=TRUE
		;;
	:)	script_exit_code=64
		output "Must supply an argument to -$OPTARG." 1
		script_exit
		;;
	\?)	script_exit_code=64
		output "Invalid argument -$OPTARG." 1
		script_exit
		;;
	esac
done

# If only persist flag set then nothing to do, exit.
if [ $# = 1 -a "$1" = "-p" ]
then
	script_exit_code=0
	script_exit
fi

# Check source file exists and is readable.
if [ ! -f "$sourcefile" ]
then
	script_exit_code=66
	output "Source file not valid." 1
	script_exit
fi

if [ ! -r "$sourcefile" ]
then
	script_exit_code=77
	output "Source file not accessible." 1
	script_exit
fi

# Now ensure source file is in Unix text format.
sed -i 's/\r$//' $sourcefile
std_cmd_err_handler $?

# Check target directory exists and is writable.
if [ "$targetdir" = "" ]
then
	targetdir=$PWD
fi

if [ ! -d "$targetdir" ]
then
	script_exit_code=66
	output "Target directory not valid." 1
	script_exit
fi

if [ ! -w "$targetdir" ]
then
	script_exit_code=77
	output "Target directory not accessible." 1
	script_exit
fi

# Now get the files
IFS="/"
exec 3<"$sourcefile"
while read -u3 -ra input
do
	outputfile=${input[${#input[*]}-1]}
	case $osname in
	FreeBSD)
		output "Attempting to get file - ""${input[*]}" 0
		output "Attempting to save file to - ""$targetdir/$outputfile" 0
		fetch "$verbosity" -o "$targetdir/$outputfile" "${input[*]}"
		status=$?
		output "File get completed with status "$status $status
		((script_exit_code = script_exit_code + status))
	;;
	Linux)
		output "Attempting to get file - ""${input[*]}" 0
		output "Attempting to save file to - ""$targetdir/$outputfile" 0
		wget "$verbosity" --no-check-certificate -O "$targetdir/$outputfile" "${input[*]}"
		status=$?
		output "File get completed with status "$status $status
		((script_exit_code = script_exit_code + status))
	;;
	esac
	
	if [ $script_exit_code = 0 ]
	then
		# If Windows CR/LF line ending required, convert.
		if [ $windows = TRUE ]
		then
			sed -i 's/$/\r/' "$targetdir/$outputfile"
			status=$?
			output "Converion to Windows format complete with status "$status $status
			((script_exit_code = script_exit_code + status))
		fi
		# If persist is TRUE, save parameters.
		if [ $persist = TRUE ]
		then
			rm --interactive=never ~/$conffile
			write_file
		fi
		if [ $owner = TRUE ]
		then
			chown $newowner "$targetdir/$outputfile"
			status=$?
			output "Owner change complete with status "$status $status
			((script_exit_code = script_exit_code + status))
		fi
		if [ $ownergroup = TRUE ]
		then
			chown :$newownergroup "$targetdir/$outputfile"
			status=$?
			output "Owner group change complete with status "$status $status
			((script_exit_code = script_exit_code + status))
		fi
	fi
done
exec 3<&-

# And exit
output "Script complete with exit code: "$script_exit_code $script_exit_code
script_exit
